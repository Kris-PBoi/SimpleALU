$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module $rootio $end
 $upscope $end
 $scope module subtractorTb $end
  $var wire 8 # a_i [7:0] $end
  $var wire 8 $ b_i [7:0] $end
  $var wire 8 % diff [7:0] $end
  $var wire 1 & sign $end
  $scope module uut $end
   $var wire 32 + N [31:0] $end
   $var wire 8 # a_i [7:0] $end
   $var wire 8 $ b_i [7:0] $end
   $var wire 8 % diff [7:0] $end
   $var wire 1 & sign $end
   $var wire 9 ' carry_int [8:0] $end
   $var wire 8 ( b_iComp [7:0] $end
   $var wire 8 ) sum [7:0] $end
   $var wire 9 * carry_int2 [8:0] $end
   $var wire 8 , one [7:0] $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b10010101 #
b11010010 $
b11000011 %
1&
b001111010 '
b00101101 (
b11000010 )
b000000000 *
b00000000000000000000000000001000 +
b00000001 ,
#10
